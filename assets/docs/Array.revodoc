Array(Object) : Iterable {

	Object[] items;
	int size;
	boolean ordered;

	new(Array arg0) {}

	new(Object[] arg0) {}

	new(boolean arg0, Object[] arg1, int arg2, int arg3) {}

	new() {}

	new(int arg0) {}

	new(boolean arg0, int arg1) {}

	boolean equals(Object arg0) {}

	String toString() {}

	int hashCode() {}

	ArrayIterator iterator() {}

	void add(Object arg0, Object arg1, Object arg2) {}

	void add(Object arg0, Object arg1, Object arg2, Object arg3) {}

	void add(Object arg0, Object arg1) {}

	void add(Object arg0) {}

	Object get(int arg0) {}

	String toString(String arg0) {}

	int indexOf(Object arg0, boolean arg1) {}

	void clear() {}

	boolean contains(Object arg0, boolean arg1) {}

	boolean isEmpty() {}

	int lastIndexOf(Object arg0, boolean arg1) {}

	Object[] toArray() {}

	void addAll(Array arg0, int arg1, int arg2) {}

	void addAll(Array arg0) {}

	void addAll(Object[] arg0) {}

	void addAll(Object[] arg0, int arg1, int arg2) {}

	Object pop() {}

	Object first() {}

	void set(int arg0, Object arg1) {}

	void insert(int arg0, Object arg1) {}

	Object[] ensureCapacity(int arg0) {}

	void reverse() {}

	Object peek() {}

	void truncate(int arg0) {}

	boolean containsAll(Array arg0, boolean arg1) {}

	boolean removeAll(Array arg0, boolean arg1) {}

	void removeRange(int arg0, int arg1) {}

	Object[] setSize(int arg0) {}

	void sort() {}

	void sort(Comparator arg0) {}

	void shuffle() {}

	void swap(int arg0, int arg1) {}

	Object random() {}

	int selectRankedIndex(Comparator arg0, int arg1) {}

	boolean removeValue(Object arg0, boolean arg1) {}

	Object removeIndex(int arg0) {}

	boolean containsAny(Array arg0, boolean arg1) {}

	boolean notEmpty() {}

	Object selectRanked(Comparator arg0, int arg1) {}

	Object[] shrink() {}

	static Array with(Object[] arg0) {}

	void insertRange(int arg0, int arg1) {}

	boolean equalsIdentity(Object arg0) {}

}
