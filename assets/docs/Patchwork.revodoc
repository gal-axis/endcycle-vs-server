Patchwork(Object) : IdEntity, Paintable {

	ID id;
	Array palette;
	Color tint;
	Map states;
	PatchworkStateId state;
	PatchworkStateId defaultState;
	PatchworkStateId leadsInto;
	float sizeX;
	float sizeY;
	float maxWidth;
	float maxHeight;
	int hAlign;
	int vAlign;
	double animationSpeed;
	double animState;

	new(ID id) {}

	new(ID id, Map states) {}

	boolean equals(Object arg0) {}

	String toString() {}

	int hashCode() {}

	int get(int object, int orElse) {}

	Object get(Object object, Object orElse) {}

	float get(float object, float orElse) {}

	double get(double object, double orElse) {}

	void paint(Painter painter) {}

	ID getId() {}

	void update(float delta) {}

	static PatchworkStateId getState(String name) {}

	PatchworkStateId getState() {}

	Patchwork copy() {}

	void draw(Batch batch, float posX, float posY, float scaleX, float scaleY, double animState, int hAlign, int vAlign, Color tint) {}

	void draw(Batch batch, float posX, float posY, float scaleX, float scaleY, Color tint) {}

	float getWidth() {}

	float getHeight() {}

	boolean isFinished() {}

	float getXPosition(float x, float scaleX, double animState, int hAlign) {}

	float getXPosition(float x, float scaleX) {}

	boolean hasState(PatchworkStateId name) {}

	float getYPosition(float y, float scaleY, double animState, int vAlign) {}

	float getYPosition(float y, float scaleY) {}

	boolean inState(PatchworkStateId name) {}

	boolean setState(PatchworkStateId name) {}

	void resetAnimation() {}

	void setPalette(Array palette) {}

	boolean hasShadow() {}

	double getAnimationDuration() {}

	void addState(PatchworkStateId name, DrawableState[] images) {}

	PatchworkState addState(PatchworkStateId name, PatchworkState state) {}

	PatchworkState addState(PatchworkStateId name, PatchworkStateId leadsInto, DrawableState[] images) {}

	Array getDrawables() {}

	void calculateSizes() {}

	void setStates(Map states) {}

	void resetSizes() {}

	Patchwork fullCopy() {}

	void copyStates() {}

	PatchworkState getPatchworkState() {}

	Collection getPatchworkStates() {}

}
