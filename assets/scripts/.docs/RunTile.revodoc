RunTile(PanelEffect) : BECondition {

	BattleFieldPanel panel;
	DrawableImage drawable;
	DrawableImage drawableClosed;
	DrawableImage drawableOpen;
	int xMove;
	int yMove;

	new(Drawables drawable, Drawables drawableClosed, Drawables drawableOpen, int xMove, int yMove) {}

	boolean equals(Object arg0) {}

	String toString() {}

	int hashCode() {}

	void exit(BattleEntity entity) {}

	void update(float delta) {}

	void init() {}

	boolean isAccessible(BattleEntity entity, boolean checkFree, boolean checkParty) {}

	int getX() {}

	void draw(Batch batch, float x, float y, float shade) {}

	void draw(Batch batch, float x, float y, Party party, float shade, float alpha) {}

	int getY() {}

	void dispose() {}

	void refresh() {}

	final void triggerAction(Object[] parameters) {}

	OwnedHitProperty hit(OwnedHitProperty property) {}

	void free() {}

	BattleFieldBorder getCameraBorder(BattleEntity focused) {}

	boolean changeType(PanelType type) {}

	Battle getBattle() {}

	void actionTriggered(Object[] action) {}

	boolean shareBorder(BattleFieldPanel panel2) {}

	void enter(BattleEntity entity) {}

	OwnedHitProperty affect(OwnedHitProperty property) {}

	boolean test(BattleEntity entity) {}

	void move(BattleEntity entity) {}

	boolean canMoveToGoal(BattleEntity entity) {}

	boolean isMove(int x, int y) {}

	Point getGoal(BattleEntity entity, boolean chain) {}

}
