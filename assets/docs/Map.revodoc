interface Map {

	abstract Object remove(Object arg0);

	boolean remove(Object arg0, Object arg1) {}

	abstract Object get(Object arg0);

	abstract Object put(Object arg0, Object arg1);

	abstract boolean equals(Object arg0);

	abstract Collection values();

	abstract int hashCode();

	abstract void clear();

	abstract boolean isEmpty();

	Object replace(Object arg0, Object arg1) {}

	boolean replace(Object arg0, Object arg1, Object arg2) {}

	abstract int size();

	abstract Set entrySet();

	abstract void putAll(Map arg0);

	Object putIfAbsent(Object arg0, Object arg1) {}

	abstract Set keySet();

	abstract boolean containsKey(Object arg0);

	abstract boolean containsValue(Object arg0);

	Object getOrDefault(Object arg0, Object arg1) {}

}
