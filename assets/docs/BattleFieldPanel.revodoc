BattleFieldPanel(Object) {

	final BoundedFloat revert;
	final BattleField field;
	final int x;
	final int y;
	BattleFieldBorder border;
	Drawable enemyPanel;
	Drawable friendlyPanel;
	Drawable neutralPanel;
	Drawable noPanel;
	Party originalParty;
	PanelType originalType;
	boolean fixed;
	Party party;
	Party oldParty;
	BattleFieldPanel connectedPanel;
	PanelType type;
	PanelEffect effect;
	float xOffset;
	float yOffset;
	float animation;
	Array entities;

	new(BattleField arg0, int arg1, int arg2, FieldPanelData arg3) {}

	new(BattleField arg0, int arg1, int arg2) {}

	new(BattleField arg0, int arg1, int arg2, Party arg3, PanelType arg4, boolean arg5) {}

	boolean equals(Object arg0) {}

	String toString() {}

	int hashCode() {}

	void actionTriggered(Runnable arg0) {}

	void actionTriggered(Object[] arg0) {}

	boolean isActionRollback(Object[] arg0) {}

	void update(float arg0) {}

	void init() {}

	boolean isAccessible(BattleEntity arg0, boolean arg1) {}

	PanelType getType() {}

	Vector2 getOffset(BattleEntity arg0) {}

	void setType(PanelType arg0) {}

	void draw(Batch arg0, float arg1, float arg2) {}

	void draw(Batch arg0, float arg1, float arg2, float arg3) {}

	void playSound(SoundInfo arg0) {}

	void triggerEvent(Object arg0, Object arg1, Object[] arg2) {}

	final void triggerAction(Object[] arg0) {}

	OwnedHitProperty hit(OwnedHitProperty arg0) {}

	void changeData(FieldPanelData arg0) {}

	BattleFieldBorder getCameraBorder(BattleEntity arg0) {}

	void changeType(PanelType arg0) {}

	boolean setParty(Party arg0, BattleFieldPanel arg1) {}

	boolean setParty(Party arg0, BattleFieldPanel arg1, boolean arg2) {}

	boolean setParty(Party arg0, BattleFieldPanel arg1, boolean arg2, boolean arg3) {}

	boolean free(BattleEntity arg0) {}

	boolean isBattleClient() {}

	void occupy(BattleEntity arg0) {}

	boolean occupiedBy(Party arg0) {}

	boolean accessible(boolean arg0) {}

	boolean occupied(boolean arg0) {}

	boolean isOccupied() {}

	boolean isOccupied(BattleEntity arg0) {}

	void resetRevert() {}

	void effectDispose() {}

	void effectInit() {}

	OwnedHitProperty affect(OwnedHitProperty arg0) {}

	void effectRefresh() {}

	void calculateOffsets() {}

	boolean isTypeChanged() {}

	boolean isPartyChanged() {}

}
