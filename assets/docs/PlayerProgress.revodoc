final PlayerProgress(Object) {

	static final int TUTORIAL_BASIC = 1;
	static final int TUTORIAL_MENU = 2;
	static final int TUTORIAL_INVENTORY_BASIC = 4;
	static final int TUTORIAL_INVENTORY_STYLING = 8;
	Array campaignProgress;
	Array affinities;
	Array charactersUnlocked;
	Array charactersBought;
	Array customizationUnlocked;
	Array campaignsUnlocked;
	Array themesUnlocked;
	Array affinityEntries;
	Array newAffinityEntries;
	Array creditsDefeated;
	Array adventuresCleared;
	Array adventureEvents;
	Array adventureZonesCleared;
	int battlesFought;
	int battlesWon;
	int battlesLost;
	int enemiesCrushed;
	int selfCrushed;
	int tutorials;
	boolean cheating;

	new() {}

	boolean equals(Object arg0) {}

	String toString() {}

	int hashCode() {}

	void load() {}

	void save() {}

	void merge(PlayerProgress progress) {}

	boolean isTutorialComplete(int tutorial) {}

	boolean isBestScore(GameDifficulty difficulty, boolean coop, int score) {}

	boolean isBestWave(GameDifficulty difficulty, boolean coop, int wave) {}

	boolean isCharacterUnlocked(ID id) {}

	boolean isAdventureEventEncountered(ID id) {}

	boolean isCharacterCustomizationUnlocked(ID id) {}

	boolean isCampaignUnlocked(ID id) {}

	List getUnlockedCampaigns() {}

	void clearAdventureZone(AdventureZone zone) {}

	void adventureEventEncountered(AdventureEvent event) {}

	boolean isAdventureCleared(ID id) {}

	boolean buyCharacter(BattleEntityData entity) {}

	boolean isThemeUnlocked(ID id) {}

	void cheat() {}

	void saveLocal() {}

	void completeTutorial(int tutorial) {}

	void increaseAffinity(ID id, float amount) {}

	Array checkNewThemes() {}

	void checkNew() {}

	float completeCampaign(CampaignData campaign, double time, List scores) {}

	void clearAdventure(AdventurePath adventure) {}

	boolean checkNewAffinities() {}

	Array checkNewCustomizations() {}

	boolean isAffinityEntryUnlocked(ID id) {}

	boolean[] completeOnslaught(GameDifficulty difficulty, boolean coop, int score, int wave) {}

	Array checkNewCampaigns() {}

	void addDefeatedCredit(String name) {}

	List getUnlockedCharacters() {}

	Array checkNewCharacters() {}

	List getAffinityEntries() {}

	List getUnlockedThemes() {}

}
