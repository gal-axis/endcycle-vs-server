BattleField(Object) : ScreenObject {

	final BattleFieldData data;
	BattleFieldPanel[][] panels;
	int width;
	int height;
	int imageSizeX;
	int imageSizeY;
	Drawable enemyPanel;
	Drawable friendlyPanel;
	Drawable neutralPanel;
	Drawable noPanel;
	boolean doubleSide;
	Array hitMarker;
	Array panelArray;
	Battle battle;

	new(BattleFieldData data) {}

	boolean equals(Object arg0) {}

	String toString() {}

	int hashCode() {}

	void dispose() {}

	void update(float delta) {}

	boolean remove() {}

	String getName() {}

	void init(GameScreen screen) {}

	boolean isHidden() {}

	void resize(boolean landscape, int width, int height) {}

	void draw(CustomSpriteBatch batch, float xOfs, float yOfs) {}

	void show(GameScreen screen) {}

	void hide(GameScreen screen) {}

	Origin getOrigin() {}

	byte getLayer() {}

	float getComparisonKey() {}

	BattleFieldPanel get(int x, int y) {}

	boolean isAccessible(int x, int y, boolean isFree) {}

	boolean isAccessible(int x, int y) {}

	PanelType getType(int x, int y) {}

	void set(int x, int y, BattleFieldPanel panel) {}

	float getShade(float y) {}

	int getPanelAtY(float y) {}

	void free(int x, int y, BattleEntity be) {}

	void free(BattleEntity be) {}

	float getPanelMiddleX() {}

	float getPanelMiddleY() {}

	float getPanelX(float x) {}

	float getPanelY(float y) {}

	int getPanelAtX(float x) {}

	void triggerEvent(Object type, Object trigger, Object[] parameters) {}

	BattleFieldBorder getBorder(int x, int y) {}

	void occupy(int x, int y, BattleEntity be) {}

	void changeType(int x, int y, PanelType tile) {}

	BattleFieldPanel generate(FieldPanelData data, int x, int y) {}

	void convertPanel(BattleFieldPanel connectedPanel, int x, int y, Party party) {}

	Party getParty(int x, int y) {}

	boolean inBounds(int x, int y) {}

	boolean occupied(int x, int y) {}

	FieldFlicker flickerField(Party party, int x, int y, boolean flicker, float time, float delay) {}

	Vector2 getPosition(int x, int y, Vector2 position) {}

	List getVisiblePanels(float xOfs, float yOfs) {}

	boolean inBoundX(int x) {}

	boolean inBoundY(int y) {}

	Party getOriginalParty(int x, int y) {}

	void createBorders(Array borderSearch) {}

	void createBorder(Array panels, BattleFieldBorder border, BattleFieldPanel panel) {}

}
