BlindAilment(Ailment) : RenderProcessor, BECondition {

	final BoundedFloat position;
	final float defaultDuration;
	final BoundedFloat duration;
	AilmentInflict inflict;
	EffectType effectType;
	BattleEntity owner;
	BattleEntity entity;
	Drawable image;

	new() {}

	boolean equals(Object arg0) {}

	String toString() {}

	int hashCode() {}

	void actionTriggered(Runnable action) {}

	void actionTriggered(Object[] action) {}

	boolean isActionRollback(Object[] action) {}

	int get(int object, int orElse) {}

	Object get(Object object, Object orElse) {}

	float get(float object, float orElse) {}

	double get(double object, double orElse) {}

	void paint(Painter parameters) {}

	void update(float delta) {}

	void init() {}

	void start(BattleEntity entity, BattleEntity owner, AilmentInflict inflict) {}

	void interrupt() {}

	void end() {}

	boolean draw(CustomSpriteBatch batch, float xOfs, float yOfs, float scale) {}

	void dispose() {}

	final void triggerAction(Object[] parameters) {}

	boolean over() {}

	void increaseDuration() {}

	void setIntensity(float intensity) {}

	boolean isDisplayed() {}

	float getIntensity() {}

	boolean canTarget() {}

	boolean test(BattleEntity entity) {}

	void init(GameScreen screen) {}

	void resize(boolean landscape, int width, int height) {}

	void updateRender(float delta) {}

	void startRendering(CustomSpriteBatch batch, byte layer) {}

	void stopRendering(CustomSpriteBatch batch, byte layer) {}

	boolean hideHealth(BattleEntity entity) {}

	boolean isBlind() {}

}
