BattleEntityComplexAction(BattlePlayer) {

	final Array buttons;
	ClientPlayer client;
	final BattleEntity entity;
	Battle battle;
	Random random;
	int level;
	DangerManager dangerManager;
	MoveManager moveManager;
	TargetManager targetManager;
	TurnManager turnManager;
	VocPlanManager vocPlanManager;
	VocUseManager vocUseManager;
	HashMap actions;
	BattleEntityAction action;

	new(BattleEntity arg0, int arg1, boolean arg2) {}

	new(BattleEntity arg0, Random arg1, int arg2, boolean arg3) {}

	boolean equals(Object arg0) {}

	String toString() {}

	int hashCode() {}

	void controllerConnected(Controller arg0) {}

	void controllerDisconnected(Controller arg0) {}

	boolean keyTyped(char arg0) {}

	boolean triggerButton(ButtonEvent arg0) {}

	boolean keyDown(int arg0) {}

	boolean addButtonTips(ButtonTipList arg0) {}

	boolean triggerTouch(TouchEvent arg0) {}

	boolean triggerType(int arg0) {}

	boolean keyUp(int arg0) {}

	int getInputPriority() {}

	void add() {}

	void remove() {}

	void update(float arg0) {}

	void init() {}

	void interrupt() {}

	void dispose() {}

	void hit(HitProperty arg0) {}

	boolean isAuthorative() {}

	void hitEntity(BattleEntity arg0, OwnedHitProperty arg1) {}

	BattleEntityActionSave getSave() {}

	void vibrateController(float arg0, float arg1) {}

	final Controller getController() {}

	void move(int arg0, int arg1) {}

	GameScreenMessage createRewardMessage(RandomVocRewards arg0, Random arg1, boolean arg2) {}

	boolean sendClientInput(Object arg0, boolean arg1) {}

	boolean canUpgrade() {}

	void setCombat(boolean arg0) {}

	void setHudButtons(BattleHUD arg0) {}

	void upgrade() {}

	MockController setKeyPressed(KeyCode arg0, boolean arg1) {}

	void createHud(int arg0) {}

	void clientInput(ButtonEvent arg0) {}

	boolean applyInput(KeyCode arg0, boolean arg1, boolean arg2) {}

	void applyInput(float arg0, Object arg1) {}

	void cancelMove() {}

	BattleEntity getTarget() {}

	void setBehavior(BehaviorType arg0) {}

	void setVocTags(VocTag[] arg0) {}

}
