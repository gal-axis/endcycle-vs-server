abstract RushAttack(Attack) {

	Array attackTasks;
	String name;
	int level;
	int gaugeIndex;
	double gaugeConsume;
	boolean timerStopped;
	float timer;
	float duration;
	boolean interruptable;
	boolean moveable;
	boolean locksControls;
	boolean locksTurn;
	KeyCode keyCode;
	PatchworkStateId castAnimation;
	PatchworkStateId attackAnimation;
	Party party;
	BattleEntity user;
	BattleEntityList targets;
	AttackPlan plan;
	Object origin;
	WrappedAttackSender wrappedSender;
	OwnedHitProperty property;
	Array particles;
	static final int ACTION_HIT_BORDER = 0;
	static final int ACTION_HIT_OBJECT = 1;
	static final int ACTION_MOVE_ANIM = 2;
	boolean canSteer;
	boolean canTurn;
	boolean ignoresEntities;
	boolean floating;
	boolean hitPanels;
	int maxDistance;
	float rushSpeed;
	MoveType backMove;
	float backSpeed;
	int originX;
	int originY;
	List nextY;
	boolean turned;
	boolean occupyPanels;
	BattleEntityList hitEntities;
	boolean hit;
	boolean spawnedTracer;
	AttackParticleSpawner spawner;

	new() {}

	boolean equals(Object arg0) {}

	String toString() {}

	int hashCode() {}

	Attack clone() {}

	boolean isActionRollback(Object[] arg0) {}

	void actionTriggered(Object[] arg0) {}

	final void actionTriggered(Runnable arg0) {}

	boolean triggerButton(ButtonEvent arg0) {}

	boolean keyDown(int arg0) {}

	boolean triggerTouch(TouchEvent arg0) {}

	boolean addButtonTips(ButtonTipList arg0) {}

	boolean keyTyped(char arg0) {}

	boolean triggerType(int arg0) {}

	int getInputPriority() {}

	boolean keyUp(int arg0) {}

	void controllerConnected(Controller arg0) {}

	void controllerDisconnected(Controller arg0) {}

	String getName() {}

	void update(float arg0) {}

	Attack cast(BattleEntity arg0, AttackPlan arg1) {}

	final BattleField getField() {}

	void start() {}

	final void copy(Attack arg0) {}

	BattleEntity getTarget() {}

	void flip() {}

	final float getY(int arg0) {}

	final float getX(int arg0) {}

	SoundContainer playSound(SoundInfo arg0) {}

	boolean active() {}

	final Origin getOrigin(int arg0) {}

	void finish() {}

	final Controller getController() {}

	final void triggerAction(Object[] arg0) {}

	boolean attackAnimation(float arg0) {}

	boolean castAnimation(float arg0) {}

	boolean fillGauges() {}

	final int getXTile() {}

	final int getYTile() {}

	void updateAttackTasks(float arg0) {}

	final BattleEntityList getBattleEntities() {}

	void increaseGauge(double arg0) {}

	double getGaugeProgress() {}

	void scheduleAction(int arg0, float arg1) {}

	void scheduleAction(Runnable arg0, float arg1) {}

	AttackPortal getPortal(BattleEntity arg0, float arg1, float arg2, float arg3) {}

	final int getXTileInFront() {}

	void addWrappers(AttackWrappers arg0) {}

	boolean reduceGauge(double arg0) {}

	boolean reduceGauge() {}

	boolean acceptsInput(ButtonEvent arg0) {}

	void runAction(int arg0) {}

	final int getTurn() {}

	Attack getWrapped(AttackWrapper arg0, boolean arg1, boolean arg2) {}

	Attack charge() {}

	boolean setAnimationState(PatchworkStateId arg0, float arg1) {}

	boolean hasAnimationState(PatchworkStateId arg0) {}

	void moveToTile(int arg0, int arg1) {}

	void moveToTile(int arg0, int arg1, MoveType arg2, float arg3) {}

	void applyHitBorder() {}

	boolean hitObject() {}

	void applyHitObject() {}

	boolean hitBorder() {}

	void moveAnimation() {}

}
