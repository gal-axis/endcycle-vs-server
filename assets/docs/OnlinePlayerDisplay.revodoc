OnlinePlayerDisplay(MenuElementGroup) : MenuTablePainter, MenuTableAction {

	Origin origin;
	GameScreen screen;
	boolean showing;
	MenuScreen menu;
	MenuButton inventory;
	OnlinePlayerRefreshButton refresh;
	MenuTable players;
	boolean hasPlayers;

	new(boolean inventory) {}

	final boolean equals(Object obj) {}

	String toString() {}

	final int hashCode() {}

	void dispose() {}

	void update(float delta) {}

	boolean remove() {}

	String getName() {}

	void init(GameScreen screen) {}

	boolean isHidden() {}

	void resize(boolean landscape, int width, int height) {}

	void hide(GameScreen screen) {}

	void show(GameScreen screen) {}

	void draw(CustomSpriteBatch batch, float xOfs, float yOfs) {}

	final Origin getOrigin() {}

	float getComparisonKey() {}

	byte getLayer() {}

	final void removeObject() {}

	final SoundContainer playSound(Sounds sound) {}

	SoundContainer playSound(float x, float y, SoundInfo sound) {}

	SoundContainer playSound(SoundInfo sound) {}

	void triggerEvent(Object type, Object trigger, Object[] parameters) {}

	void actionTriggered(MenuElementAction action) {}

	MenuElementGroup getParent() {}

	MenuElement setParent(MenuElementGroup parent) {}

	void calculateSize() {}

	float getY() {}

	float getX() {}

	boolean select() {}

	MenuElement setEnabled(boolean enabled) {}

	float getHeight() {}

	float getWidth() {}

	MenuElement setHeight(float height) {}

	MenuElement setLayer(byte layer) {}

	MenuElement getAbsoluteParent() {}

	final void triggerAction(MenuElementActionType type) {}

	boolean touch(TouchEvent trigger) {}

	MenuElement setX(float x) {}

	MenuElement setY(float y) {}

	MenuElement setWidth(float width) {}

	MenuElement setFocusable(boolean focusable) {}

	float calcY() {}

	float calcX() {}

	float getAbsoluteY() {}

	MenuElement setAnchor(MenuElement anchor) {}

	MenuElement setFocused(boolean focused) {}

	MenuElement setHidden(boolean hidden) {}

	boolean isAbsoluteHidden() {}

	float getAbsoluteX() {}

	void addElements(Array elements, float x, float y) {}

	boolean canDrawCursor() {}

	MenuElement setAnchorHAlign(int anchorHAlign) {}

	MenuElement setAnchorVAlign(int anchorVAlign) {}

	void setCursor(Rectangle rectangle) {}

	MenuElement setHAlign(int hAlign) {}

	MenuElement setVAlign(int vAlign) {}

	MenuButtonTips getButtonTips() {}

	MenuElement getAnchor() {}

	boolean isEnabled() {}

	int getAnchorVAlign() {}

	boolean isFocused() {}

	boolean isFocusable() {}

	int getVAlign() {}

	int getAnchorHAlign() {}

	int getHAlign() {}

	Set getActionListeners() {}

	final void setMenuControllerSelection(MenuElement element) {}

	boolean isTouching(float x, float y) {}

	int compare(MenuElement o1, MenuElement o2) {}

	Comparator reversed() {}

	Comparator thenComparing(Comparator arg0) {}

	void setDefaultElement(MenuElement defaultElement) {}

	MenuElement getDefaultElement() {}

	MenuElement addObject(MenuElement object) {}

	void removeObject(MenuElement object) {}

	List getObjects() {}

	void ignoreSize(MenuElement object) {}

	void setBackground(MenuThemeDrawable background) {}

	float getOffsetX() {}

	float getOffsetY() {}

	void setCountSize(List countSize) {}

	void setObjects(List objects) {}

	void setBgPad(float bgPad) {}

	void setOffsetX(float offsetX) {}

	void setOffsetY(float offsetY) {}

	List getCountSize() {}

	void addElements(Array elements, float x, float y, MenuElement object) {}

	void countSize(MenuElement object) {}

	float getBgPad() {}

	MenuElementShowAnim getShowAnimation() {}

	MenuThemeDrawable getBackground() {}

	void setBackgroundColor(Color backgroundColor) {}

	Color getBackgroundColor() {}

	void updateTableSelection(int selection) {}

	void moveTableSelection(int selection) {}

	boolean selectTableHeader() {}

	void paint(MenuTablePaintParams params) {}

	Painter getPainter(MenuTablePaintParams params) {}

	Painter getPainter(MenuTablePaintParams params, int hAlign, int vAlign) {}

	void finishPainting(MenuTablePaintParams params) {}

	void startPainting(MenuTablePaintParams params) {}

	void paintBG(MenuTablePaintParams params) {}

	void add(MenuScreen screen) {}

	boolean checkPlayers() {}

}
