interface Batch {

	abstract void dispose();

	abstract void flush();

	abstract void end();

	abstract void draw(Texture arg0, float arg1, float arg2, float arg3, float arg4, float arg5, float arg6, float arg7, float arg8);

	abstract void draw(Texture arg0, float arg1, float arg2);

	abstract void draw(Texture arg0, float arg1, float arg2, int arg3, int arg4, int arg5, int arg6);

	abstract void draw(Texture arg0, float arg1, float arg2, float arg3, float arg4, int arg5, int arg6, int arg7, int arg8, boolean arg9, boolean arg10);

	abstract void draw(Texture arg0, float arg1, float arg2, float arg3, float arg4);

	abstract void draw(Texture arg0, float[] arg1, int arg2, int arg3);

	abstract void draw(TextureRegion arg0, float arg1, float arg2);

	abstract void draw(TextureRegion arg0, float arg1, float arg2, Affine2 arg3);

	abstract void draw(TextureRegion arg0, float arg1, float arg2, float arg3, float arg4, float arg5, float arg6, float arg7, float arg8, float arg9, boolean arg10);

	abstract void draw(TextureRegion arg0, float arg1, float arg2, float arg3, float arg4, float arg5, float arg6, float arg7, float arg8, float arg9);

	abstract void draw(TextureRegion arg0, float arg1, float arg2, float arg3, float arg4);

	abstract void draw(Texture arg0, float arg1, float arg2, float arg3, float arg4, float arg5, float arg6, float arg7, float arg8, float arg9, int arg10, int arg11, int arg12, int arg13, boolean arg14, boolean arg15);

	abstract void begin();

	abstract boolean isDrawing();

	abstract Color getColor();

	abstract void setColor(Color arg0);

	abstract void setColor(float arg0, float arg1, float arg2, float arg3);

	abstract int getBlendSrcFuncAlpha();

	abstract Matrix4 getProjectionMatrix();

	abstract void setProjectionMatrix(Matrix4 arg0);

	abstract void setTransformMatrix(Matrix4 arg0);

	abstract boolean isBlendingEnabled();

	abstract void setBlendFunctionSeparate(int arg0, int arg1, int arg2, int arg3);

	abstract int getBlendDstFuncAlpha();

	abstract Matrix4 getTransformMatrix();

	abstract void disableBlending();

	abstract void enableBlending();

	abstract ShaderProgram getShader();

	abstract int getBlendSrcFunc();

	abstract void setPackedColor(float arg0);

	abstract void setBlendFunction(int arg0, int arg1);

	abstract void setShader(ShaderProgram arg0);

	abstract float getPackedColor();

	abstract int getBlendDstFunc();

}
