MenuElementController(GameScreenObject) : InputListener {

	Origin origin;
	GameScreen screen;
	boolean showing;

	new() {}

	new(MenuElement masterElement) {}

	final boolean equals(Object obj) {}

	String toString() {}

	final int hashCode() {}

	void dispose() {}

	void update(float delta) {}

	boolean remove() {}

	String getName() {}

	void init(GameScreen screen) {}

	boolean isHidden() {}

	void resize(boolean landscape, int width, int height) {}

	void show(GameScreen screen) {}

	void draw(CustomSpriteBatch batch, float xOfs, float yOfs) {}

	void hide(GameScreen screen) {}

	float getComparisonKey() {}

	final Origin getOrigin() {}

	byte getLayer() {}

	final void removeObject() {}

	final SoundContainer playSound(Sounds sound) {}

	SoundContainer playSound(float x, float y, SoundInfo sound) {}

	SoundContainer playSound(SoundInfo sound) {}

	void triggerEvent(Object type, Object trigger, Object[] parameters) {}

	void controllerConnected(Controller controller) {}

	void controllerDisconnected(Controller controller) {}

	boolean triggerType(int character) {}

	int getInputPriority() {}

	boolean triggerTouch(TouchEvent event) {}

	boolean triggerButton(ButtonEvent event) {}

	boolean addButtonTips(ButtonTipList tips) {}

	boolean keyDown(int keycode) {}

	boolean keyTyped(char character) {}

	boolean keyUp(int keycode) {}

	void start() {}

	void stop() {}

	void removeElement(MenuElement element) {}

	void setMasterElement(MenuElement masterElement) {}

	boolean setSelected(int x, int y) {}

	boolean setSelected(MenuElement selected) {}

	void buildNeighbors() {}

	void buildNeighbors(Array elements) {}

	void buildNeighbors(boolean separate, MenuElement[] elements) {}

	void buildNeighbors(boolean separate, Array elements) {}

	void syncCursor() {}

	MenuElement getSelected() {}

	boolean move(Direction direction) {}

	void setController(Controller controller) {}

	MenuButtonTips getButtonTips() {}

	void setAllowEmptySelection(boolean allowEmptySelection) {}

	void setCursorElement(MenuElement selected) {}

	void setMouseInput(boolean mouseInput) {}

	boolean moveContainer(Direction direction) {}

	void updateCursor(float delta) {}

	void setKeyBoardInput(boolean keyBoardInput) {}

	void drawCursor(CustomSpriteBatch batch, float xOfs, float yOfs) {}

	boolean hasNeighbor(Direction direction) {}

}
