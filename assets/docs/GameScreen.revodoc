GameScreen(Object) {

	static final float MAX_DELTA_ORIGINAL = 0.04;
	static float MAX_DELTA;
	final ButtonTipChecker buttonTips;
	GameScreenInfo info;
	AudioHandler audio;
	Layers layers;
	GameEventHandler events;
	ScreenInputHandler input;
	GameScreenTimer timer;
	Shaker shaker;
	ScreenConnection connection;
	float timeScale;

	new() {}

	boolean equals(Object arg0) {}

	String toString() {}

	int hashCode() {}

	GameScreen get() {}

	void update(float delta) {}

	ScreenObject getObject(String name) {}

	void init() {}

	void resume() {}

	void resize(boolean landscape, int width, int height) {}

	void dispose() {}

	void setScreen(GameScreen screen) {}

	void setScreen(GameScreen screen, FadeType fade) {}

	void setScreen(GameScreen screen, FadeType fade, boolean changesBefore) {}

	void resetShake() {}

	boolean removeObject(ScreenObject object) {}

	Array getObjects() {}

	void clearObjects() {}

	boolean isShaking() {}

	void show() {}

	ScreenObject addObject(ScreenObject object) {}

	void changeTo(GameScreen screen, boolean init) {}

	void render(float delta) {}

	void updateTimer(float delta) {}

	void draw(CustomSpriteBatch batch) {}

	void draw(CustomSpriteBatch batch, float xOfs, float yOfs) {}

	void hide() {}

	static GameScreen getCurrentScreen() {}

	void shake(float x, float y, float duration) {}

	void toPreviousScreen(FadeType type) {}

	void toPreviousScreen() {}

	void shakeVibrate(float x, float y, float duration) {}

	void updateShake(float delta) {}

	boolean isCurrentScreen() {}

	void changeFrom(GameScreen screen, boolean init) {}

	void updateObjects(float delta) {}

	void drawButtonTips(CustomSpriteBatch batch, float x, float y) {}

	void addRenderProcessor(RenderProcessor renderProcessor) {}

	void removeRenderProcessor(RenderProcessor renderProcessor) {}

	Array getRenderProcessors() {}

	void setPreviousScreen(GameScreen previousScreen) {}

	GameScreen getPreviousScreen() {}

	Object[] getTextArguments() {}

	void pause() {}

	void addScript(Script script, float delay) {}

	boolean isLoading() {}

	void resetTimer() {}

}
